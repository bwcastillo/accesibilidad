# Definir carpetas de trabajo
setwd("C:/Users/usuario/Documents/Rwork/Accesibilidad")
setwd("Raw_Data")
region <- 8
html <- read_html(paste0("http://www.asof.cl/apps/mapaferias/regiones/",region,".php"))
urls <- html %>%
html_nodes("option") %>%
html_attr("value") %>%
na.omit()
library(rvest)
library(stringr)
region <- 8
# Hacer un scrapping de las ferias para obtener los links de las ferias
# En las comunas de la regiÃ³n
html <- read_html(paste0("http://www.asof.cl/apps/mapaferias/regiones/",region,".php"))
urls <- html %>%
html_nodes("option") %>%
html_attr("value") %>%
na.omit()
maps <- sapply(urls, function(x) {
read_html(paste0("http://www.asof.cl/apps/mapaferias/regiones/",x)) %>%
html_nodes("iframe") %>%
html_attr("src")
}
)
ids <- sapply(maps, function(x) {
str_extract(read_html(x) %>%
html_nodes(xpath = '//meta[@itemprop="url"]') %>%
html_attr('content'), "[-_0-9A-Za-z]+$")
}
)
for (mid in ids) {
namess <- gsub("/", "_", names(ids[ids == mid]))
namess <- gsub(".php", "", namess)
dir.create(paste0("kml/",region))
download.file(paste0("https://www.google.com/maps/d/u/0/kml?mid=",mid,"&forcekml=1"),paste0("kml/",region,"/",namess, "_", mid,".kmz"))
}
View(urls)
View(maps)
View(ids)
for (mid in ids) {
namess <- gsub("/", "_", names(ids[ids == mid]))
namess <- gsub(".php", "", namess)
dir.create(paste0("kml/",region))
download.file(paste0("https://www.google.com/maps/d/u/0/kml?mid=",mid,"&forcekml=1"),paste0("kml/",region,"/",namess, "_", mid,".kmz"))
}
library(maptools)
setwd("C:/Users/usuario/Documents/Rwork/Accesibilidad/Raw_Data/")
KMZs <- list.files(path="kml/rms/", pattern="*.kmz", full.names=FALSE)
setwd("C:/Users/usuario/Documents/Rwork/Accesibilidad/Raw_Data/")
# list the kmz files in a given folder path
KMZs <- list.files(path="kml/8/", pattern="*.kmz", full.names=FALSE)
From_Kmz_to_Shp_Points <- function(KMZs, folder, dest, name_output){
LonLat <- data.frame()
for (i in seq(KMZs)){
tryCatch(tmp <- getKMLcoordinates(paste0("kml/",folder,"/", KMZs[i]), ignoreAltitude = T), error = function(x){print(KMZs[i]); tmp <- NA})
if (class(tmp) == "matrix" | length(tmp) == 1) {print(KMZs[i]);next()}
tmp <- do.call(rbind, tmp)
colnames(tmp) <- c("lon", "lat")
LonLat <- rbind(LonLat, tmp)
}
LonLat <- LonLat[!is.na(LonLat$lon),]
sp <- SpatialPointsDataFrame(LonLat, LonLat)
writeOGR(sp, dest, name_output, "ESRI Shapefile", overwrite_layer = T)
return(data.frame(LonLat, Ciudad = folder))
}
View(tmp)
View(LonLat)
From_Kmz_to_Shp_Points <- function(KMZs, folder, dest, name_output){
LonLat <- data.frame()
for (i in seq(KMZs)){
tryCatch(tmp <- getKMLcoordinates(paste0("kml/",folder,"/", KMZs[i]), ignoreAltitude = T), error = function(x){print(KMZs[i]); tmp <- NA})
if (class(tmp) == "matrix" | length(tmp) == 1) {print(KMZs[i]);next()}
tmp <- do.call(rbind, tmp)
colnames(tmp) <- c("lon", "lat")
LonLat <- rbind(LonLat, tmp)
}
LonLat <- LonLat[!is.na(LonLat$lon),]
sp <- SpatialPointsDataFrame(LonLat, LonLat)
writeOGR(sp, dest, name_output, "ESRI Shapefile", overwrite_layer = T)
return(data.frame(LonLat, Ciudad = folder))
}
